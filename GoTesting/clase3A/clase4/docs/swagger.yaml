definitions:
  handler.request:
    properties:
      Active:
        type: boolean
      Age:
        type: integer
      DateCreate:
        type: string
      Email:
        type: string
      Height:
        type: number
      Id:
        type: integer
      LastName:
        type: string
      Name:
        type: string
    required:
    - Active
    - Age
    - DateCreate
    - Email
    - Height
    - LastName
    - Name
    type: object
  web.Response:
    properties:
      code:
        type: string
      data: {}
      error:
        type: string
    type: object
info:
  contact:
    name: NaniMM API Support
    url: https://developers.mercadolibre.com.ar/support
  description: This API Handle MELI Products by NaniMM.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: NaniMM Bootcamp API
  version: "1.0"
paths:
  /users:
    get:
      description: get users
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
      summary: List users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: save users
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: User to store
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: save users
      tags:
      - Users
  /users/{id}:
    delete:
      description: delete user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: delete user
      tags:
      - Users
    patch:
      consumes:
      - application/json
      description: update partial user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.Response'
      summary: update partial user
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.Response'
      summary: update user
      tags:
      - Users
swagger: "2.0"
